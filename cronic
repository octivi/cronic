#!/bin/bash

# Cronic v3 - cron job report wrapper
# Copyright 2018-2022  IMAGIN Sp. z o.o.
# Copyright 2007-2016  Chuck Houpt. No rights reserved, whatsoever.
# Author: Marcin Engelmann <mengelmann@imagin.pl>
#
# Public Domain CC0: http://creativecommons.org/publicdomain/zero/1.0/
#
# Cronic is a shell script to help control the most annoying feature of cron:
# unwanted emailed output, or "cram" (cron spam).
#
# Cronic is a small shim shell script for wrapping cron jobs so that cron only
# sends email when an error has occurred. Cronic defines an error as any non-trace
# error output or a non-zero result code. Cronic filters Bash execution traces
# (or anything matching PS4) from the error output, so jobs can be run with
# execution tracing to aid forensic debugging. Cronic has no options, it simply
# executes its arguments.
#
# The Disease:
#   0 1 * * * backup >/dev/null 2>&1
# The Cure:
#   0 1 * * * cronic backup

# Unofficial Bash "Strict Mode"
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -o errexit -o nounset -o pipefail


TMP="$(mktemp -d)"
OUT="${TMP}/cronic.out"
ERR="${TMP}/cronic.err"
TRACE="${TMP}/cronic.trace"

set +e
"$@" >"${OUT}" 2>"${TRACE}"
RESULT=$?
set -e

PATTERN="^${PS4:0:1}\\+${PS4:1}"
if grep -aq "${PATTERN}" "${TRACE}"; then
  grep -av "${PATTERN}" "${TRACE}" > "${ERR}" && exit 1
else
  ERR="${TRACE}"
fi

if [ ${RESULT} -ne 0 ] || [ -s "${ERR}" ]; then
  echo "Cronic detected failure or error output for the command:"
  echo "$@"
  echo
  echo "RESULT CODE: ${RESULT}"
  echo
  echo "ERROR OUTPUT:"
  cat "${ERR}"
  echo
  echo "STANDARD OUTPUT:"
  cat "${OUT}"
  if [ "${TRACE}" != "${ERR}" ]; then
    echo
    echo "TRACE-ERROR OUTPUT:"
    cat "${TRACE}"
  fi
fi

rm -rf "${TMP}"
